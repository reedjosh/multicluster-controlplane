#
#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#       - name: Build and push Docker image
#         uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#
#
#
#


name: GoRelease

on:
  push:
    tags:
      - 'v*.*.*'
env:
  # Common versions
  GO_VERSION: '1.20'
  GO_REQUIRED_MIN_VERSION: ''
  GOPATH: '/home/runner/work/multicluster-controlplane/multicluster-controlplane/go'
  GITHUB_REF: ${{ github.ref }}
  CHART_NAME: 'multicluster-controlplane'

defaults:
  run:
    working-directory: go/src/open-cluster-management.io/multicluster-controlplane

jobs:
  env:
    name: prepare release env
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: go/src/open-cluster-management.io/multicluster-controlplane
      - name: get release version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: get major release version
        run: |
          echo "MAJOR_RELEASE_VERSION=${RELEASE_VERSION%.*}" >> $GITHUB_ENV
          echo "TRIMED_RELEASE_VERSION=${RELEASE_VERSION#v}" >> $GITHUB_ENV
      - name: verify chart version 
        run: |
          cat ./charts/multicluster-controlplane/Chart.yaml | grep -q 'version: ${{ env.TRIMED_RELEASE_VERSION }}'
    outputs:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      MAJOR_RELEASE_VERSION: ${{ env.MAJOR_RELEASE_VERSION }}
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      TRIMED_RELEASE_VERSION: ${{ env.TRIMED_RELEASE_VERSION }}
  image:
    name: image
    runs-on: ubuntu-latest
    needs: [ env ]
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: go/src/open-cluster-management.io/multicluster-controlplane
      - name: install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: install imagebuilder
        run: go install github.com/openshift/imagebuilder/cmd/imagebuilder@v1.2.4-0.20230309135844-a3c3f8358ca3
      - name: pull base image
        run: docker pull registry.access.redhat.com/ubi8/ubi-minimal:latest --platform=linux/${{ matrix.arch }}
      - name: image
        run: |
          IMAGE_TAG=${{ needs.env.outputs.RELEASE_VERSION }}-${{ matrix.arch }} \
          IMAGE_BUILD_EXTRA_FLAGS="--build-arg OS=linux --build-arg ARCH=${{ matrix.arch }}" \
            make image
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: push
        run: |
          docker push ghcr.io/reedjosh/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }}-${{ matrix.arch }}
  release-chart:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [ env ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: go/src/open-cluster-management.io/multicluster-controlplane

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  # image-manifest:
  #   name: image manifest
  #   runs-on: ubuntu-latest
  #   needs: [ env, image ]
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 1
  #         path: go/src/open-cluster-management.io/multicluster-controlplane
  #     - name: create
  #       run: |
  #         echo ${{ secrets.DOCKER_PASSWORD }} | docker login quay.io --username ${{ secrets.DOCKER_USER }} --password-stdin
  #         docker manifest create quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }} \
  #           quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }}-amd64 \
  #           quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }}-arm64
  #     - name: annotate
  #       run: |
  #         docker manifest annotate quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }} \
  #           quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }}-amd64 --arch amd64
  #         docker manifest annotate quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }} \
  #           quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }}-arm64 --arch arm64
  #     - name: push
  #       run: |
  #         docker manifest push quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }}
  # release-image:
  #   name: Release Image
  #   runs-on: ubuntu-latest
  #   needs: [ env, image-manifest ]
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 1
  #         path: go/src/open-cluster-management.io/multicluster-controlplane
  #     - name: generate changelog
  #       run: |
  #         echo "# Controlplane ${{ needs.env.outputs.RELEASE_VERSION }}" > /home/runner/work/changelog.txt
  #         echo "- See the [CHANGELOG](https://github.com/open-cluster-management-io/multicluster-controlplane/CHANGELOG/CHANGELOG-${{ needs.env.outputs.MAJOR_RELEASE_VERSION }}.md) for more details." >> /home/runner/work/changelog.txt
  #         echo "- The released image is quay.io/open-cluster-management/multicluster-controlplane:${{ needs.env.outputs.RELEASE_VERSION }}" >> /home/runner/work/changelog.txt
  #     - name: publish release
  #       uses: softprops/action-gh-release@v0.1.5
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         body_path: /home/runner/work/changelog.txt
